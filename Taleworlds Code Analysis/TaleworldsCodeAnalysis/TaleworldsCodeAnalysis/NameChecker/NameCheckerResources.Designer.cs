//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaleworldsCodeAnalysis.NameChecker {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NameCheckerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NameCheckerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TaleworldsCodeAnalysis.NameChecker.NameCheckerResources", typeof(NameCheckerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class {0} cannot be &quot;Protected&quot; by TW conventions..
        /// </summary>
        internal static string ClassModifierCheckerMessageFormat {
            get {
                return ResourceManager.GetString("ClassModifierCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All class names should use TW conventions..
        /// </summary>
        internal static string ClassNameCheckerDescription {
            get {
                return ResourceManager.GetString("ClassNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class {0} with access modifier {1} should use {2}..
        /// </summary>
        internal static string ClassNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("ClassNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All class names should use TW  conventions..
        /// </summary>
        internal static string ClassNameCheckerTitle {
            get {
                return ResourceManager.GetString("ClassNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All fields should be private..
        /// </summary>
        internal static string FieldAccessibilityCheckerDescription {
            get {
                return ResourceManager.GetString("FieldAccessibilityCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; should be private..
        /// </summary>
        internal static string FieldAccessibilityCheckerMessageFormat {
            get {
                return ResourceManager.GetString("FieldAccessibilityCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All fields should be private..
        /// </summary>
        internal static string FieldAccessibilityCheckerTitle {
            get {
                return ResourceManager.GetString("FieldAccessibilityCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All private fields should use &quot;_uscoreCase&quot;..
        /// </summary>
        internal static string FieldNameCheckerDescription {
            get {
                return ResourceManager.GetString("FieldNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; should use &quot;_uscoreCase&quot;..
        /// </summary>
        internal static string FieldNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("FieldNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All fields should be private and use &quot;_uscoreCase&quot;..
        /// </summary>
        internal static string FieldNameCheckerTitle {
            get {
                return ResourceManager.GetString("FieldNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces should use &quot;IPascalCase&quot;..
        /// </summary>
        internal static string InterfaceNameCheckerDescription {
            get {
                return ResourceManager.GetString("InterfaceNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface {0} should use &quot;IPascalCase&quot;..
        /// </summary>
        internal static string InterfaceNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("InterfaceNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces should use &quot;IPascalCase&quot;..
        /// </summary>
        internal static string InterfaceNameCheckerTitle {
            get {
                return ResourceManager.GetString("InterfaceNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locals should use &quot;camelCase&quot;..
        /// </summary>
        internal static string LocalNameCheckerDescription {
            get {
                return ResourceManager.GetString("LocalNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local {0} should use &quot;camelCase&quot;..
        /// </summary>
        internal static string LocalNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("LocalNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locals should use &quot;camelCase&quot;..
        /// </summary>
        internal static string LocalNameCheckerTitle {
            get {
                return ResourceManager.GetString("LocalNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All method names should use TW conventions..
        /// </summary>
        internal static string MethodNameCheckerDescription {
            get {
                return ResourceManager.GetString("MethodNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} with access modifier {1} should use {2}..
        /// </summary>
        internal static string MethodNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("MethodNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All method names should use TW conventions..
        /// </summary>
        internal static string MethodNameCheckerTitle {
            get {
                return ResourceManager.GetString("MethodNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters should use &quot;camelCase&quot;..
        /// </summary>
        internal static string ParameterNameCheckerDescription {
            get {
                return ResourceManager.GetString("ParameterNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} should use &quot;camelCase..
        /// </summary>
        internal static string ParameterNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("ParameterNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters should use &quot;camelCase&quot;..
        /// </summary>
        internal static string ParameterNameCheckerTitle {
            get {
                return ResourceManager.GetString("ParameterNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All property names sholud use TW conventions..
        /// </summary>
        internal static string PropertyNameCheckerDescription {
            get {
                return ResourceManager.GetString("PropertyNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} with access modifier {1} should use {2}..
        /// </summary>
        internal static string PropertyNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("PropertyNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All property names should use TW conventions..
        /// </summary>
        internal static string PropertyNameCheckerTitle {
            get {
                return ResourceManager.GetString("PropertyNameCheckerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template parameters should use &quot;TPascalCase&quot;..
        /// </summary>
        internal static string TemplateParameterNameCheckerDescription {
            get {
                return ResourceManager.GetString("TemplateParameterNameCheckerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template parameter {0} should use &quot;TPascalCase&quot;..
        /// </summary>
        internal static string TemplateParameterNameCheckerMessageFormat {
            get {
                return ResourceManager.GetString("TemplateParameterNameCheckerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template parameters should use &quot;TPascalCase&quot;..
        /// </summary>
        internal static string TemplateParameterNameCheckerTitle {
            get {
                return ResourceManager.GetString("TemplateParameterNameCheckerTitle", resourceCulture);
            }
        }
    }
}
